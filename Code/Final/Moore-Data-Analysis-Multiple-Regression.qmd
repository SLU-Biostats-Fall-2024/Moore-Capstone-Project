---
title: "Moore-Data-Analysis-Multiple-Regression"
format: html
editor: visual
---
# Question 2: What factor best predicts telomere length?

I am looking at telomere length, which is ratio response data. I am interested in seeing which predictor variable best predicts telomere length, so I will use a multiple regression because this test allows for comparison among predictor variables.

## Setting up work space

```{r}
#Clearing R's environment
rm (list = ls())
```

```{r}
#Activating necessary packages
library(tidyverse)
library(ggfortify)
library(Hmisc)
library(GGally)
library(corrplot)
library(ggcorrplot)
library(performance)
library(broom)
library(leaps)
library(MASS)
library(data.table)
library(here)
```

```{r}
#Reading in data. Specificing stringsAsFactors allows for character data to be loaded in as a factor, which is helpful for later analysis.
eastwood <- read.csv(here("Data/Eastwood23_superb_climate_data_revised.csv"),  stringsAsFactors = T)
```
This data already consists of complete cases. 

## Predicting analysis
#### Making a histogram as initial depiction of telomere length data.
Making predictions off of this histogram can allow me to determine if there are any mistakes when I do my analysis. The summary statistics in the analysis should be similar to the ones estimated from the histogram.

```{r}
ggplot(eastwood, aes(rTL)) + geom_histogram()
```
The telomere lengths range between 0.25-1.20 with a median of around 0.65. Telomere lengths appear to be normally distributed without strong outliers or any unusual shapes in the distribution. This is good because multiple linear regression requires normally distributed data. 

#### Organizing predictor variables
In order to check correlations between predictor variables to make sure they are independent, I will compare the correlation coefficients of the numerical predictor variables. I can not do this with categorical variables, so I will move them all to the left of my data frame so I can isolate the numeric variables. Columns 1-3 are just the row numbers and the bird identifiers, so I will ignore them, and column 4 is my response variable, so I will move categorical variables to the right of that. The variables at the end of the data set are also just for identification, so I will leave them there.

```{r}
eastwood <- eastwood %>% relocate(T35.nestling.yn, .after = rTL)
eastwood <- eastwood %>% relocate(HatchMonth, .after = T35.nestling.yn)
eastwood <- eastwood %>% relocate(Sex, .after = HatchMonth)
eastwood <- eastwood %>% relocate(HelpersYesNo, .after = Sex)
```
The numeric variables are now in columns 9-18.

Checking predictor correlations
```{r}
#Testing correlations and viewing as round for clarity
cor_tests <- cor(eastwood[,9:18], method = "pearson")
cor_tests <- round(cor_tests, 2)
```

Interpreting correlations
```{r}
#Checking statistical significance
cor_tests_results <- rcorr(as.matrix(eastwood[,9:18]))

#Flattening to understand results
flattenCorrMatrix<-function(cormat,pmat){
  ut<-upper.tri(cormat)
  data.frame(
    row = rownames (cormat)[row(cormat) [ut]],
    column = rownames(cormat)[col(cormat)[ut]],
    cor = (cormat)[ut],
    p = pmat[ut]
  )
}
```

Viewing pairwise correlations
```{r}
predictor_table <- flattenCorrMatrix(cor_tests_results$r, cor_tests_results$P)
```

Filtering out highly correlated (>0.7) pairs
```{r}
highly_correlated <- predictor_table %>% filter(cor >= 0.7 | cor <= -0.7)
View(highly_correlated)
```
The only variables that are highly correlated are three temperature variables: mean daily maximum temperature, mean daily minimum temperature, and mean daily maximum temperature over a 19-day period between 25 and 6 days prior to telomere measurement. I am going to keep just mean daily maximum temperature.

Moving highly correlated variables to left of DF to seperate from those that will be used in analysis
```{r}
eastwood <- eastwood %>% relocate(Tmin.nestling, .after = HelpersYesNo)
eastwood <- eastwood %>% relocate(Tmax.pre, .after = Tmin.nestling)
```
The columns with possible predictor variables are now 11-18. 

#### Estimating predictor variables
Viewing correlations between predictor variables and response variable and sorting the results so it is easy to see which correlation is the highest
```{r}
predictor_cors <- data.frame(cor(eastwood[,11:18], eastwood$rTL))
predictor_cors <- predictor_cors %>% rename(correlation = cor.eastwood...11.18...eastwood.rTL.)
predictor_cors %>% arrange(desc(correlation)) %>% View()
```
T35.nestling, aka the frequency of days >=35C during the nestling phase has the highest correlation with relative telomere length (0.21), so I can predict that this variable will be in my regression model.

Plotting relative telomere length and T35.nestling to get an idea of relationships.
```{r}
ggplot(eastwood, aes(T35.nestling, rTL)) + geom_point()
```
There appears to be zero inflation. I will plot the next most correlated variable, age, to see if it looks better. 
```{r}
ggplot(eastwood, aes(ChickAge, rTL)) + geom_point()
```
This has less zero inflation and is possibly centered around the mean more. 

## Making multiple regression
Making a data frame with just the response variable and the predictor variables with appropriate correlations found above
```{r}
#Moving response variable to left of predictors
eastwood <- eastwood %>% relocate(rTL, .after = Tmax.pre)
#Creating new DF
cleaned_eastwood <- eastwood[c(10:18)]
```

#### Building best subsets regression to determine which model is best for this data
```{r}
all_subsets.mods <- regsubsets(cleaned_eastwood$rTL ~ ., data = cleaned_eastwood, nbest = 1)
all_subsets.mods
all_summary <-summary(all_subsets.mods)
outmat<- as.data.frame(all_summary$outmat)
all_summary$adjr2

#Viewing as a figure to better understand results and visualize R2 values
plot(all_subsets.mods, scale = "r2")
```
The model with 4 predictors has the highest R2 value.

Using Mallow's Cp to compare models
```{r}
plot(all_summary$cp)
plot(all_subsets.mods, scale = "Cp")
```
This is similar to the figure above.

Plotting BIC
```{r}
plot(all_summary$bic)
plot(all_subsets.mods, scale = "bic")
```
The best model appears to have four predictors: T35.nestling, chick age, Tvar.nestling, and Tmax.nestling. 

#### Stepwise regression
Defining models
```{r}
#Intercept only
m.intercept_only <- glm(cleaned_eastwood$rTL ~ 1, data = cleaned_eastwood)

#All predictors
m.all.preds <- glm(cleaned_eastwood$rTL ~ ., data = cleaned_eastwood)
```

Stepwise regression
```{r}
m.stepwise <- step(m.intercept_only, direction = "both", scope = formula(m.all.preds))

```
This model suggests that the best model would have 2 predictors: T35.nestling and chick age, instead of 4 predictors.

#### AIC stepwise
Building full model
```{r}
full <- glm(rTL~ ., family = gaussian, data = cleaned_eastwood)
summary(full)
```


### StepAIC procedure
```{r}
step <- stepAIC(full, trace = F)
step$anova
```
The final model uses Tmax.nestling, T35.nestling, Tvar.nestling, and chick age. This is the same as the the best subsets regression.

#### Comparing models
Although I created 3 models, the best subsets and stepwise AIC produced the same so I am combining that into one for the comparison.
```{r}
#Creating models
mod_best_stepAIC <- lm(rTL ~ Tmax.nestling + T35.nestling + Tvar.nestling + ChickAge, data = cleaned_eastwood)

mod_step <- lm(rTL ~ T35.nestling + ChickAge, data = cleaned_eastwood)

#Comparing
AIC(mod_best_stepAIC, mod_step)
```
The models have almost exactly the same AIC, so they are essentially equivalent, but I will compare their R2 to see if there is a difference there.
```{r}
performance(mod_best_stepAIC)
performance(mod_step)
```
The model suggested by the best subsets regression and stepwise AIC regression has a higher adjusted R2, so I will use that as my final model. 

#### Final model
```{r}
final_mod <- lm(rTL ~ Tmax.nestling + T35.nestling + Tvar.nestling + ChickAge, data = cleaned_eastwood)
```

#### Check model assumptions
```{r}
check_model(final_mod)
```
The observed data fits closely with the model-predicted data, so the model looks good. 

#### Printing ANOVA results and viewing in a summary table
```{r}
anova(final_mod)
summary(final_mod)
```
The overall model is significant (F = 6.966 with 4 and 388 df, p < 0.05). There is significance with T35.nestling and chick age. Independently, telomere length is significantly related to Tmax.nestling, T35.nestling, and chick age. 

#### Making final plot
Putting results into data frames so they can be graphed
```{r}
#Making data frames
coefs <- tidy(final_mod)
ci <- data.table(confint(final_mod), keep.rownames = 'term')

#Combining
cidf <- cbind(coefs, ci)
colnames(cidf)
cidf <-cidf[,-6]
cidf <-cidf %>% rename("lower" = "2.5 %", "upper" = "97.5 %")
cidf$term <- as.factor(cidf$term)
```

Plotting confidence intervals for each term in the model
```{r}
ggplot(cidf, aes(estimate, term))+
  geom_vline(xintercept = 0, linetype = 2)+
  geom_point(size = 3)+
  geom_errorbarh(aes(xmax = lower, xmin = upper), height = 0.2)+
  theme_bw()
```

